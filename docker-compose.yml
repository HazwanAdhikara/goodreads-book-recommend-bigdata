services:
  # Zookeeper for Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    hostname: zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - goodreads-network

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    networks:
      - goodreads-network

  # MinIO (S3-compatible storage)
  minio:
    image: minio/minio:latest
    hostname: minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
    networks:
      - goodreads-network

  minio-client:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      mc alias set myminio http://minio:9000 minioadmin minioadmin &&
      mc mb myminio/streaming-data || echo 'Bucket already exists';
      exit 0;"
    networks:
      - goodreads-network

  # PostgreSQL for Hive Metastore
  postgres:
    image: postgres:13
    hostname: postgres
    container_name: postgres
    environment:
      POSTGRES_DB: metastore
      POSTGRES_USER: hive
      POSTGRES_PASSWORD: hive
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - goodreads-network

  # Hive Metastore
  hive-metastore:
    image: bitsondatadev/hive-metastore:latest
    hostname: hive-metastore
    container_name: hive-metastore
    platform: linux/amd64 # Force AMD64 for Apple Silicon compatibility
    environment:
      METASTORE_DB_HOSTNAME: postgres
      METASTORE_TYPE: postgres
      METASTORE_PORT: 5432
      METASTORE_DATABASE: metastore
      METASTORE_USERNAME: hive
      METASTORE_PASSWORD: hive
    depends_on:
      - postgres
    ports:
      - "9083:9083"
    networks:
      - goodreads-network

  # Trino
  trino:
    image: trinodb/trino:latest
    hostname: trino
    container_name: trino
    ports:
      - "8081:8080"
    volumes:
      - ./trino-config:/etc/trino
    depends_on:
      - hive-metastore
      - minio
    networks:
      - goodreads-network

  # Apache Spark
  spark-master:
    image: bitnami/spark:latest
    platform: linux/amd64 # Force AMD64 for Apple Silicon compatibility
    hostname: spark-master
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - "8082:8082"
      - "7077:7077"
    volumes:
      - ./spark-apps:/opt/spark-apps
      - ./data:/opt/spark-data
    networks:
      - goodreads-network

  spark-worker:
    image: bitnami/spark:latest
    platform: linux/amd64 # Force AMD64 for Apple Silicon compatibility
    hostname: spark-worker
    container_name: spark-worker
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=2G
      - SPARK_WORKER_CORES=2
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    depends_on:
      - spark-master
    volumes:
      - ./spark-apps:/opt/spark-apps
      - ./data:/opt/spark-data
    networks:
      - goodreads-network

  # Streamlit Dashboard
  streamlit-dashboard:
    build:
      context: ./streamlit-app
      dockerfile: Dockerfile
    hostname: streamlit-dashboard
    container_name: streamlit-dashboard
    ports:
      - "8501:8501"
    volumes:
      - ./streamlit-app:/app
      - ./data:/app/data
    depends_on:
      - kafka
      - minio
    networks:
      - goodreads-network

volumes:
  minio-data:
    driver: local
  postgres-data:
    driver: local

networks:
  goodreads-network:
    driver: bridge
